go.property("team_index", 1)
go.property("power", 4)
go.property("parent", msg.url())

function init(self)
	self.current_power = self.power

end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function fixed_update(self, dt)
end

local trigger_response = hash("trigger_response")
function on_message(self, message_id, message, sender)
	if message_id == trigger_response then
        if message.enter then
			if bullets[message.other_id] == nil or bullets[message.other_id].team_index ~= self.team_index then
				bullets[message.other_id] = nil
				go.delete(message.other_id)

				self.current_power = self.current_power - 1
				if self.current_power <= 0 then
					go.delete()
				end
			end
        end
    end
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
