go.property("speed", 10)
go.property("index", 0)

local function move_circle(amount)
    local newPos = go.get_position()
    newPos = newPos + amount;

    go.set_position(newPos)
end

local function mirror(in_vector, normal)
	return in_vector - 2 * (vmath.dot(in_vector, normal)) * normal;
end

local function add_touchPos(table, pos)
	for index, value in ipairs(table) do
		value.touch_pos[#value.touch_pos+1] = pos
	end
end

function init(self)
	self.move_vector = vmath.vector3(self.speed, -self.speed, 0)
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	move_circle(self.move_vector * dt)
end

function fixed_update(self, dt)
	-- This function is called if 'Fixed Update Frequency' is enabled in the Engine section of game.project
	-- Can be coupled with fixed updates of the physics simulation if 'Use Fixed Timestep' is enabled in
	-- Physics section of game.project
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

local trigger_response = hash("trigger_response")
local hash_normal = hash("normal")
function on_message(self, message_id, message, sender)
	if message_id == trigger_response then
        if message.enter then
			if circles1[self.index].touch_pos[1] == nil then
				add_touchPos(circles1, go.get_position())
			end

			go.set_position(table.remove(circles1[self.index].touch_pos, 1))

			local url = msg.url(message.other_id)
			url.fragment = "wallController"
            self.move_vector = mirror(self.move_vector, go.get(url, hash_normal))
        end
    end
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
