go.property("fire_interval", 3)
go.property("team_index", 3)
go.property("bullet_speed", 3)
go.property("dir", -1)

function init(self)
	self.bullets = {}

	self.current_fire_interval = self.fire_interval
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function fixed_update(self, dt)
	self.current_fire_interval = self.current_fire_interval - dt
	if self.current_fire_interval <= 0 then
		local url = msg.url(go.get_parent())
		url.fragment = "circleController"

		local dir = go.get(url, "move_vector")
		dir = vmath.rotate(vmath.quat_rotation_z(45 * self.dir), dir)

		bullets[factory.create("#bullet_factory")] = {move = self.bullet_speed * dir, team_index = self.team_index}

		self.current_fire_interval = self.fire_interval
	end
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
